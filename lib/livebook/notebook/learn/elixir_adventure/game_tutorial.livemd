# Game Tutorial

```elixir
Mix.install([
  :phoenix,
  :kino,
  :elixir_math,
  {:game_server, path: "../game_server"}
])

Kino.SmartCell.register(SmartCells.Game1)
Kino.SmartCell.register(SmartCells.Game2)
Kino.SmartCell.register(SmartCells.Game3)
Kino.SmartCell.register(SmartCells.Game4)
Kino.SmartCell.register(SmartCells.Game5)
```

## Game tutorial

<!-- livebook:{"branch_parent_index":0} -->

## Level 1

<!-- livebook:{"attrs":{},"chunks":null,"kind":"Elixir.SmartCells.Game1","livebook_object":"smart_cell"} -->

```elixir
{:ok, server} =
  LocalGameServer.start_link(%{
    initial_fruit: {600, 125, 20},
    fruit_generated_probability: 0,
    success_func: fn %{fruits: fruits} -> Enum.empty?(fruits) end
  })

SmartCells.KinoGame.new(server)
```

### Intrucciones

* Registra un jugador
* Muevelo a la posición `{600, 125}`

```elixir
LocalGameServer.register(server, "netto")
# LocalGameServer.view(server)
# LocalGameServer.move(server, {600, 125})

# LocalGameServer.set_setting(server, :fruit_type_distribution, [{:power_up, 1}])
# LocalGameServer.set_setting(server, :fruit_generated_probability, 50)
# LocalGameServer.set_setting(server, :max_powered, 100_000)

# Player.check(server)
```

<!-- livebook:{"branch_parent_index":0} -->

## Level 2

<!-- livebook:{"attrs":{},"chunks":null,"kind":"Elixir.SmartCells.Game2","livebook_object":"smart_cell"} -->

```elixir
{:ok, server} =
  LocalGameServer.start_link(%{
    initial_fruits_count: 5,
    fruit_generated_probability: 0,
    success_func: fn %{fruits: fruits} -> Enum.empty?(fruits) end
  })

SmartCells.KinoGame.new(server)
```

### Intrucciones

* Registra un jugador
* Busca las posiciones

```elixir
LocalGameServer.register(server, "OLA")

{pos, _} =
  LocalGameServer.view(server)
  |> Map.get(:fruits)
  |> Enum.at(0)

LocalGameServer.move(server, pos)
```

<!-- livebook:{"branch_parent_index":0} -->

## Level 3

<!-- livebook:{"attrs":{},"chunks":null,"kind":"Elixir.SmartCells.Game3","livebook_object":"smart_cell"} -->

```elixir
{:ok, server} =
  LocalGameServer.start_link(%{
    initial_fruits: [{500, 125, 20}, {300, 125, 20, :power_up}],
    fruit_generated_probability: 0,
    success_func: fn %{fruits: fruits} ->
      fruits |> Enum.find(fn {_, {_, type}} -> type == :power_up end) |> is_nil()
    end,
    failure_func: fn %{fruits: fruits} ->
      fruits |> Enum.find(fn {_, {_, type}} -> type == :default end) |> is_nil()
    end
  })

SmartCells.KinoGame.new(server)
```

### Intrucciones

* ve a por la fruta mágica

```elixir
LocalGameServer.register(server, "OLA")

# {pos, _} = LocalGameServer.view(server)
# |> Map.get(:fruits)
# |> Enum.at(0)

# LocalGameServer.move(server, pos)

# LocalGameServer.view(server)

# LocalGameServer.move(server, {500, 125})
# LocalGameServer.move(server, {300, 125})
```

<!-- livebook:{"branch_parent_index":0} -->

## Level 4

<!-- livebook:{"attrs":{},"chunks":null,"kind":"Elixir.SmartCells.Game4","livebook_object":"smart_cell"} -->

```elixir
{:ok, server} =
  LocalGameServer.start_link(%{
    initial_fruits: [{500, 125, 20}, {300, 125, 20, :power_up}],
    initial_enemies: [{"enemy", %{pos_x: 600, pos_y: 200, size: 20, score: 5000}}],
    powered_ticks_per_fruit_size: 50,
    max_powered: 10000,
    powered_velocity_bonus: 0,
    fruit_generated_probability: 0,
    success_func: fn %{players: players} ->
      {_, %{score: score, status: status}} =
        players |> Enum.find(fn {_, %{pid: pid}} -> is_nil(pid) end)

      score < 5000 and status == :idle
    end
  })

SmartCells.KinoGame.new(server)
```

```elixir
LocalGameServer.register(server, "OLA")

# {pos, _} = LocalGameServer.view(server)
# |> Map.get(:fruits)
# |> Enum.at(0)

# LocalGameServer.move(server, pos)

LocalGameServer.view(server)

# LocalGameServer.move(server, {500, 125})
# LocalGameServer.move(server, {300, 125})

LocalGameServer.move(server, {600, 200})
```

<!-- livebook:{"branch_parent_index":0} -->

## Level 5

<!-- livebook:{"attrs":{},"chunks":null,"kind":"Elixir.SmartCells.Game5","livebook_object":"smart_cell"} -->

```elixir
{:ok, server} =
  LocalGameServer.start_link(%{
    initial_fruits: [
      {450, 125, 5, :power_up},
      {400, 70, 10},
      {300, 125, 15, :power_up},
      {400, 205, 20},
      {600, 75, 25}
    ],
    powered_ticks_per_fruit_size: 50,
    max_powered: 10000,
    powered_velocity_bonus: 0.001,
    fruit_generated_probability: 0,
    success_func: fn %{fruits: fruits} -> Enum.empty?(fruits) end,
    failure_func: fn
      %{fruits: fruits} when fruits == %{} ->
        false

      %{fruits: fruits} ->
        min_size = fruits |> Enum.map(fn {_, {size, _}} -> size end) |> Enum.min()
        count = Enum.count(fruits)
        min_size < 30 - count * 5
    end
  })

SmartCells.KinoGame.new(server)
```

```elixir
LocalGameServer.register(server, "net")

defmodule Bot do
  def run(server) do
    :c.flush()
    loop_receive(server)
  end

  defp loop_receive(server) do
    receive do
      {:board_tick, %{status: :idle} = player, _players, fruits} ->
        case GameUtils.closest_fruit(player, fruits) do
          nil -> :ok
          pos -> LocalGameServer.move(server, pos)
        end

      _ ->
        :ok
    end

    loop_receive(server)
  end
end

Bot.run(server)
```
